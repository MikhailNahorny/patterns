/**
 * Factory Method
 * позволяет оздание новых объектов необходимо делегировать из базового класса классам наследникам
 * делает систему расширяемой
 *
 * в данном примере нужны строители, которые умеют строить, но что строить - пока непонятно
 * потому у всех строителей есть общий интерфейс и его реализации, которрые возвращаются фабриками, а у тех тоже есть общий интрефейс
 * также, добавлен класс-прокладка, который возвращает фабрику в зависимости от того, что необходимо строить
 * в итоге мы получаем в клиентском коде некоего строителя, который умеет что-то строить, не используя слово new
 * а значит можем дописать сколь-угодно много новых строителей (расширить систему) не меняя клиентский код
 */

package com.nahorny.pattern.creational.factorymethod;

public class Client {
    public static void main(String[] args) {
        Factory factory = Gap.giveFactory(Gap.Type.ALGORITHM);
        Builder builder = factory.create();
        builder.build();
    }
}
